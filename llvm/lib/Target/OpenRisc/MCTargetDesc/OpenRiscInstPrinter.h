//===- OpenRiscInstPrinter.h - Convert OpenRisc MCInst to asm syntax -*- C++ -*-==//
//
//                     The LLVM Compiler Infrastructure
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This class prints an OpenRisc MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_OPENRISC_MCTARGETDESC_OPENRISCINSTPRINTER_H
#define LLVM_LIB_TARGET_OPENRISC_MCTARGETDESC_OPENRISCINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"
#include "llvm/Support/Compiler.h"

namespace llvm {
class MCOperand;

class OpenRiscInstPrinter : public MCInstPrinter {
public:
  OpenRiscInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                    const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  // Automatically generated by tblgen.
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  static const char *getRegisterName(MCRegister Reg);

  // Print the given operand.
  static void printOperand(const MCOperand &MO, raw_ostream &O);

  // Override MCInstPrinter.
  void printRegName(raw_ostream &O, MCRegister Reg) const override;
  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;

private:
  // Print various types of operand.
  void printOperand(const MCInst *MI, int OpNum, raw_ostream &O);

  void printMemOperand(const MCInst *MI, int OpNUm, raw_ostream &O);
  void printBranchTarget(const MCInst *MI, int OpNum, raw_ostream &O);
  void printCallOperand(const MCInst *MI, int OpNum, raw_ostream &O);

  void printImm16High_AsmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printSImm16_AsmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printUImm16_AsmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printUImm5_AsmOperand(const MCInst *MI, int OpNum, raw_ostream &O);

  void printImm32_AsmOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printImm16_AsmOperand(const MCInst *MI, int OpNum, raw_ostream &O);

  void printHiSymbolOperand(const MCInst *MI, int OpNum, raw_ostream &O);
  void printLoSymbolOperand(const MCInst *MI, int OpNum, raw_ostream &O);
};
} // end namespace llvm

#endif /* LLVM_LIB_TARGET_OPENRISC_MCTARGETDESC_OPENRISCINSTPRINTER_H */
